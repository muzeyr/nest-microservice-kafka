{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nest-microservice-kafka/./apps/api/src/app/app.controller.ts","webpack://nest-microservice-kafka/./apps/api/src/app/app.module.ts","webpack://nest-microservice-kafka/./apps/api/src/app/app.service.ts","webpack://nest-microservice-kafka/./apps/api/src/product/product.controller.ts","webpack://nest-microservice-kafka/./apps/api/src/product/product.module.ts","webpack://nest-microservice-kafka/./apps/api/src/product/product.service.ts","webpack://nest-microservice-kafka/./apps/api/src/user/user.controller.ts","webpack://nest-microservice-kafka/./apps/api/src/user/user.module.ts","webpack://nest-microservice-kafka/./apps/api/src/user/user.service.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/create-product.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/create-user.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/delete-product.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/index.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/update-product.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/index.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/product-event.enum.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/service-name.enum.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/user-event.enum.ts","webpack://nest-microservice-kafka/external commonjs \"@nestjs/common\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/core\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/microservices\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/swagger\"","webpack://nest-microservice-kafka/external commonjs \"class-validator\"","webpack://nest-microservice-kafka/external commonjs \"tslib\"","webpack://nest-microservice-kafka/webpack/bootstrap","webpack://nest-microservice-kafka/./apps/api/src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from '../user/user.module';\nimport { ProductModule } from '../product/product.module';\n\n@Module({\n  imports: [UserModule, ProductModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport {\n  CreateProductDto,\n  UpdateProductDto,\n} from '@nest-microservice-kafka/shared/dto';\n\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  create(@Body(ValidationPipe) createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body(ValidationPipe) createProductDto: UpdateProductDto\n  ) {\n    return this.productService.update(id, createProductDto);\n  }\n\n  @Delete(':id')\n  delete(@Param('id') id: string) {\n    return this.productService.delete(id);\n  }\n  @Get()\n  async activeProducts() {\n    return this.productService.activeProducts();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ProductController } from './product.controller';\nimport { ProductService } from './product.service';\nimport { UserModule } from '../user/user.module';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ServiceName } from '@nest-microservice-kafka/shared/enum';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: ServiceName.PRODUCT_MICROSERVICE,\n        transport: Transport.KAFKA,\n        options: {\n          client: {\n            clientId: ServiceName.PRODUCT,\n            brokers: ['localhost:9092'],\n          },\n          producerOnlyMode: true,\n          consumer: {\n            groupId: ServiceName.PRODUCT_CONSUMER,\n          },\n        },\n      },\n      {\n        name: ServiceName.USER_MICROSERVICE,\n        transport: Transport.KAFKA,\n        options: {\n          client: {\n            clientId: ServiceName.USER,\n            brokers: ['localhost:9092'],\n          },\n          producerOnlyMode: true,\n          consumer: {\n            groupId: ServiceName.USER_CONSUMER,\n          },\n        },\n      },\n    ]),\n  ],\n  controllers: [ProductController],\n  providers: [ProductService, UserModule],\n})\nexport class ProductModule {}\n","import { Inject, Injectable } from '@nestjs/common';\nimport {\n  CreateProductDto,\n  UpdateProductDto,\n} from '@nest-microservice-kafka/shared/dto';\nimport {\n  ProductEvent,\n  ServiceName,\n} from '@nest-microservice-kafka/shared/enum';\nimport { ClientKafka } from '@nestjs/microservices';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @Inject(ServiceName.USER_MICROSERVICE)\n    private readonly authClient: ClientKafka\n  ) {}\n\n  create(createProductDto: CreateProductDto) {\n    this.authClient.emit(\n      ProductEvent.PRODUCT_CREATE,\n      JSON.stringify(createProductDto)\n    );\n  }\n\n  update(id: string, updateProductDto: UpdateProductDto) {\n    updateProductDto.id = id;\n    this.authClient.emit(\n      ProductEvent.PRODUCT_UPDATE,\n      JSON.stringify(updateProductDto)\n    );\n  }\n  delete(id: string) {\n    this.authClient.emit(ProductEvent.PRODUCT_DELETE, JSON.stringify(id));\n  }\n  async activeProducts() {\n    this.authClient\n      .emit(ProductEvent.PRODUCT_LIST, JSON.stringify({}))\n      .subscribe((data) => {\n        return data;\n      });\n  }\n}\n","import { Body, Controller, Post, ValidationPipe } from '@nestjs/common';\nimport { CreateUserDto } from '@nest-microservice-kafka/shared/dto';\nimport { UserService } from './user.service';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post('sign-up')\n  createUser(@Body(ValidationPipe) createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\nimport { ServiceName } from '@nest-microservice-kafka/shared/enum';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: ServiceName.USER_MICROSERVICE,\n        transport: Transport.KAFKA,\n        options: {\n          client: {\n            clientId: ServiceName.USER,\n            brokers: ['localhost:9092'],\n          },\n          producerOnlyMode: true,\n          consumer: {\n            groupId: ServiceName.USER_CONSUMER,\n          },\n        },\n      },\n    ]),\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n","import { Inject, Injectable } from '@nestjs/common';\nimport {\n  ProductEvent,\n  ServiceName,\n  UserEvent,\n} from '@nest-microservice-kafka/shared/enum';\nimport { ClientKafka } from '@nestjs/microservices';\nimport { CreateUserDto } from '@nest-microservice-kafka/shared/dto';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @Inject(ServiceName.USER_MICROSERVICE)\n    private readonly authClient: ClientKafka\n  ) {}\n\n  create(createUserDto: CreateUserDto) {\n    this.authClient.emit(UserEvent.USER_CREATE, JSON.stringify(createUserDto));\n  }\n}\n","import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  price: number;\n}\n","import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'The name of the user',\n    example: 'Uzeyr OZCAN',\n  })\n  @IsString()\n  @IsNotEmpty()\n  fullName: string;\n\n  @ApiProperty({\n    description: 'The email of the user',\n    example: 'muzeyr@example.com',\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n}\n","import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class DeleteProductDto {\n  @IsNotEmpty()\n  id: string;\n}\n","export * from './create-user.dto';\nexport * from './create-product.dto';\nexport * from './update-product.dto';\nexport * from './delete-product.dto';\n","import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  price: number;\n\n  @IsNotEmpty()\n  id: string;\n}\n","export * from './service-name.enum';\nexport * from './user-event.enum';\nexport * from './product-event.enum';\n","export enum ProductEvent {\n  PRODUCT_CREATE = 'product.create',\n  PRODUCT_UPDATE = 'product.update',\n  PRODUCT_DELETE = 'product.delete',\n  PRODUCT_LIST = 'product.list',\n  PRODUCT_DETAIL = 'product.detail',\n}\n","export enum ServiceName {\n  USER = 'user',\n  USER_MICROSERVICE = 'user.microservice',\n  USER_CONSUMER = 'user-consumer',\n\n  PRODUCT = 'product',\n  PRODUCT_MICROSERVICE = 'product.microservice',\n  PRODUCT_CONSUMER = 'product-consumer',\n}\n","export enum UserEvent {\n  USER_CREATE = 'user.create',\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport {DocumentBuilder, SwaggerModule} from \"@nestjs/swagger\";\nimport {TypeOrmModule} from \"@nestjs/typeorm\";\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  const config = new DocumentBuilder()\n    .setTitle('Cats example')\n    .setDescription('The cats API description')\n    .setVersion('1.0')\n    .addTag('cats')\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('doc', app, document);\n\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}