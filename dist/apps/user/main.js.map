{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nest-microservice-kafka/./apps/user/src/app/app.controller.ts","webpack://nest-microservice-kafka/./apps/user/src/app/app.module.ts","webpack://nest-microservice-kafka/./apps/user/src/app/app.service.ts","webpack://nest-microservice-kafka/./apps/user/src/app/users.repository.ts","webpack://nest-microservice-kafka/./apps/user/src/config/typeorm.config.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/create-product.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/create-user.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/delete-product.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/index.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/dto/update-product.dto.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/entities/base.entity.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/entities/index.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/entities/product.entity.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/entities/user.entity.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/index.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/product-event.enum.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/service-name.enum.ts","webpack://nest-microservice-kafka/./libs/shared/src/lib/enum/user-event.enum.ts","webpack://nest-microservice-kafka/external commonjs \"@nestjs/common\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/config\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/core\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/microservices\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/swagger\"","webpack://nest-microservice-kafka/external commonjs \"@nestjs/typeorm\"","webpack://nest-microservice-kafka/external commonjs \"bson\"","webpack://nest-microservice-kafka/external commonjs \"class-transformer\"","webpack://nest-microservice-kafka/external commonjs \"class-validator\"","webpack://nest-microservice-kafka/external commonjs \"tslib\"","webpack://nest-microservice-kafka/external commonjs \"typeorm\"","webpack://nest-microservice-kafka/external node-commonjs \"crypto\"","webpack://nest-microservice-kafka/webpack/bootstrap","webpack://nest-microservice-kafka/./apps/user/src/main.ts"],"sourcesContent":["import {Controller, Get, ParseIntPipe, Post, ValidationPipe} from '@nestjs/common';\n\nimport { AppService } from './app.service';\nimport { EventPattern, MessagePattern, Payload } from '@nestjs/microservices';\nimport { CreateUserDto } from '@nest-microservice-kafka/shared/dto';\nimport { UserEvent } from '@nest-microservice-kafka/shared/enum';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Post()\n  getData() {\n    return this.appService.getData();\n  }\n  @EventPattern(UserEvent.USER_CREATE)\n  async handleUserCreate(@Payload(ValidationPipe) data: CreateUserDto) {\n    return await this.appService.createUser(data);\n  }\n\n  @MessagePattern('get_user')\n  handleGetUser(@Payload('userId') userId: string) {\n    return this.appService.getUser(userId);\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ServiceName } from '@nest-microservice-kafka/shared/enum';\nimport { UsersRepository } from './users.repository';\nimport {ConfigModule, ConfigService} from \"@nestjs/config\";\nimport {InjectDataSource, TypeOrmModule} from \"@nestjs/typeorm\";\nimport {User} from \"@nest-microservice-kafka/shared/entity\";\nimport {typeOrmAsyncConfig} from \"../config/typeorm.config\";\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: ServiceName.USER_MICROSERVICE,\n        transport: Transport.KAFKA,\n        options: {\n          client: {\n            clientId: 'user',\n            brokers: ['localhost:9092'],\n          },\n          producerOnlyMode: true,\n          consumer: {\n            groupId: 'user-consumer',\n          },\n        },\n      },\n    ]),\n    ConfigModule.forRoot({ isGlobal: true }),\n    TypeOrmModule.forRootAsync(typeOrmAsyncConfig),\n    TypeOrmModule.forFeature([User])\n\n  ],\n  controllers: [AppController],\n  providers: [AppService, UsersRepository],\n})\nexport class AppModule {\n\n}\n","import {Injectable, Logger} from '@nestjs/common';\nimport { CreateUserDto } from '@nest-microservice-kafka/shared/dto';\nimport { UsersRepository } from './users.repository';\nimport { User } from '@nest-microservice-kafka/shared/entity';\nimport {InjectRepository} from \"@nestjs/typeorm\";\nimport {Repository} from \"typeorm\";\n\n@Injectable()\nexport class AppService {\n\n  private readonly logger: Logger = new Logger(this.constructor.name);\n  constructor(private readonly usersRepository: UsersRepository,\n              @InjectRepository(User)\n              private readonly userRepository: Repository<User>,) {}\n\n  getData(): { message: string } {\n    return { message: 'Welcome to user!' };\n  }\n  async createUser(data: CreateUserDto) {\n    try {\n      const result = await this.userRepository.save(data);\n      this.logger.warn(result)\n      return result;\n    }catch (e) {\n      this.logger.error(e)\n    }\n  }\n\n  getUser(id: string): User {\n    return this.usersRepository.findOne(id);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { User } from '@nest-microservice-kafka/shared/entity';\nimport { CreateUserDto } from '@nest-microservice-kafka/shared/dto';\nimport { randomUUID } from 'crypto';\n\n@Injectable()\nexport class UsersRepository {\n  private readonly users: User[] = [];\n\n  save(createUserDto: CreateUserDto) {\n    const user = this.populateUser(createUserDto);\n    this.users.push(user);\n  }\n\n  findOne(id: string) {\n    return this.users.find((u) => u.id === id) || null;\n  }\n  populateUser(createUserDto: CreateUserDto): User {\n    const user = new User();\n    user.id = randomUUID();\n    user.fullName = createUserDto.fullName;\n    user.email = createUserDto.email;\n    user.createdAt = new Date();\n    return user;\n  }\n}\n","import { ConfigModule, ConfigService } from '@nestjs/config';\nimport {\n  TypeOrmModuleAsyncOptions,\n  TypeOrmModuleOptions,\n} from '@nestjs/typeorm';\nimport {User} from \"@nest-microservice-kafka/shared/entity\";\n\nexport const typeOrmAsyncConfig: TypeOrmModuleAsyncOptions = {\n  imports: [ConfigModule],\n  inject: [ConfigService],\n  useFactory: async (): Promise<TypeOrmModuleOptions> => {\n    return {\n      type: 'mysql',\n      host: process.env.MYSQL_HOST,\n      port: parseInt(process.env.MYSQL_PORT, 10),\n      username: process.env.MYSQL_USER,\n      database: process.env.MYSQL_DATABASE,\n      password: process.env.MYSQL_PASSWORD,\n      entities: [ User],\n      migrations: [__dirname + '/../database/migrations/*{.ts,.js}'],\n      extra: {\n        charset: 'utf8mb4',\n      },\n      synchronize: true,\n      logging: true,\n    };\n  },\n};\n\n","import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  price: number;\n}\n","import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\nimport {ApiProperty} from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'The name of the user',\n    example: 'Uzeyr OZCAN',\n  })\n  @IsString()\n  @IsNotEmpty()\n  fullName: string;\n\n  @ApiProperty({\n    description: 'The email of the user',\n    example: 'muzeyr@example.com',\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n}\n","import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class DeleteProductDto {\n  @IsNotEmpty()\n  id: string;\n}\n","export * from './create-user.dto';\nexport * from './create-product.dto';\nexport * from './update-product.dto';\nexport * from './delete-product.dto';\n","import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateProductDto {\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  price: number;\n\n  @IsNotEmpty()\n  id: string;\n}\n","import {BeforeInsert, Column, CreateDateColumn, DeepPartial, DeleteDateColumn, Index, UpdateDateColumn} from \"typeorm\";\nimport {Exclude, Expose} from \"class-transformer\";\nimport {ApiHideProperty} from \"@nestjs/swagger\";\nimport { ObjectId } from 'bson';\n\nexport abstract class BaseEntity {\n\n  constructor(input?: DeepPartial<any>) {\n    if (input) {\n      for (const [key, value] of Object.entries(input)) {\n        (this as any)[key] = value;\n      }\n    }\n  }\n\n  @Column({\n    primary: true,\n    type: 'varchar',\n    length: 36,\n  })\n  id!: string;\n\n  @Expose()\n  @CreateDateColumn()\n  createdAt!: Date;\n\n  @Expose()\n  @UpdateDateColumn()\n  updatedAt!: Date;\n\n  @ApiHideProperty()\n  @Exclude()\n  @DeleteDateColumn({ nullable: true })\n  @Index({ unique: false })\n  deletedAt?: Date;\n\n  @BeforeInsert()\n  async populateSortableId() {\n    const generatedId = new ObjectId(ObjectId.generate()).toHexString();\n    console.log('generatedId',generatedId)\n    this.id = generatedId;\n  }\n\n}\n","export * from './base.entity';\nexport * from './user.entity';\nexport * from './product.entity';\n","import { BaseEntity } from './base.entity';\nimport {Column, Entity} from \"typeorm\";\n\n@Entity()\nexport class ProductEntity extends BaseEntity {\n\n  @Column()\n  name: string;\n\n  @Column()\n  price: number;\n\n}\n","import {BaseEntity} from \"./base.entity\";\nimport {Column, Entity} from \"typeorm\";\n\n@Entity()\nexport class User extends BaseEntity {\n\n  @Column()\n  fullName: string;\n\n  @Column()\n  email: string;\n\n}\n","export * from './service-name.enum';\nexport * from './user-event.enum';\nexport * from './product-event.enum';\n","export enum ProductEvent {\n  PRODUCT_CREATE = 'product.create',\n  PRODUCT_UPDATE = 'product.update',\n  PRODUCT_DELETE = 'product.delete',\n  PRODUCT_LIST = 'product.list',\n  PRODUCT_DETAIL = 'product.detail',\n}\n","export enum ServiceName {\n  USER = 'user',\n  USER_MICROSERVICE = 'user.microservice',\n  USER_CONSUMER = 'user-consumer',\n\n  PRODUCT = 'product',\n  PRODUCT_MICROSERVICE = 'product.microservice',\n  PRODUCT_CONSUMER = 'product-consumer',\n}\n","export enum UserEvent {\n  USER_CREATE = 'user.create',\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bson\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"crypto\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\nimport { ServiceName } from '@nest-microservice-kafka/shared/enum';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice<MicroserviceOptions>(\n    AppModule,\n    {\n      transport: Transport.KAFKA,\n\n      options: {\n        client: {\n          brokers: ['localhost:9092'],\n        },\n        consumer: {\n          groupId: ServiceName.USER_CONSUMER,\n        },\n      },\n    }\n  );\n  await app.listen();\n\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}